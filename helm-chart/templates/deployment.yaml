apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "binderhub-container-registry-helper.fullname" . }}
  labels:
    {{- include "binderhub-container-registry-helper.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "binderhub-container-registry-helper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Restart when the secret changes
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "binderhub-container-registry-helper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "binderhub-container-registry-helper.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - binderhub-{{ .Values.cloud_provider }}
          env:
            - name: BINDERHUB_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth_existing_secret_name }}
                  name: {{ .Values.auth_existing_secret_name }}
                  {{- else }}
                  name: {{ include "binderhub-container-registry-helper.fullname" . }}
                  {{- end }}
                  key: auth_token
            {{- if .Values.return_error_details }}
            - name: RETURN_ERROR_DETAILS
              value: "true"
            {{- end }}
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
